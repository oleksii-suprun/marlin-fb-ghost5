name: CI Latest

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows'
      - '**/README.md'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache PlatformIO
        uses: actions/cache@v2
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio

      - name: Run PlatformIO
        run: pio run

      - name: Get Latest Stable Version
        run: echo "BASE_VERSION=$(cat Marlin/src/inc/Version.h | grep '#define SHORT_BUILD_VERSION' | awk '{print $3}' | tr -d '"')" >> $GITHUB_ENV


      - name: Create tag
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/v${{ env.BASE_VERSION }}-b${{ github.run_id }}',
              sha: context.sha
            })

      - name: Create Release
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');

            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: 'v${{ env.BASE_VERSION }}-b${{ github.run_id }}',
              make_latest: 'true',
              generate_release_notes: true,
            });

            await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.data.id,
              name: 'Robin_nano35.bin',
              data: await fs.readFileSync('.pio/build/mks_robin_nano_v1v2/Robin_nano35.bin'),
            });
